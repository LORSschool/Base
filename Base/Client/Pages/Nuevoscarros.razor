@page "/nuevoscarros"
@page "/nuevoscarros/{Id:int}"
@inject HttpClient _http;
@inject NavigationManager _navegadorcarros;

<h3>@letrero Carros</h3>

<EditForm Model="elcarro" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="mb-3 row">
        <label for="txtNombre" class="col-sm-2 col-form-label">Nombre</label>
        <div class="col-sm-10">
            <InputText id="txtNombre" class="form-control" @bind-Value="elcarro.Nombredelcarro" />
            <ValidationMessage For="()=>elcarro.Nombredelcarro" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtMarca" class="col-sm-2 col-form-label">Marca</label>
        <div class="col-sm-10">
            <InputText id="txtMarca" class="form-control" @bind-Value="elcarro.Marcadelcarro" />
            <ValidationMessage For="()=>elcarro.Marcadelcarro" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtFecha" class="col-sm-2 col-form-label">Fecha de Creacion</label>
        <div class="col-sm-10">
            <InputNumber id="txtFecha" class="form-control" @bind-Value="elcarro.Año" />
            <ValidationMessage For="()=>elcarro.Año" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCondiciones" class="col-sm-2 col-form-label">Condiciones</label>
        <div class="col-sm-10">
            <InputSelect id="txtCondiciones" class="form-control" @bind-Value="elcarro.CondicionId">
                @foreach (Condicion condicion in lascondiciones)
                {
                    <option value="@condicion.Id">@condicion.Estadodelcarro</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>elcarro.CondicionId" />
        </div>
    </div>
    <div class="mb-3 row">
        <label for="txtCiudad" class="col-sm-2 col-form-label">Destino</label>
        <div class="col-sm-10">
            <InputSelect id="txtCiudad" class="form-control" @bind-Value="elcarro.CiudadId">
                @foreach (Ciudad ciudad in lasciudades)
                {
                    <option value="@ciudad.Id">@ciudad.Nombredeciudad</option>
                }
            </InputSelect>
            <ValidationMessage For="()=>elcarro.CiudadId" />
        </div>
    </div>
    <button class="btn btn-success" type="submit">Guardar</button>
    <button class="btn btn-danger" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    [Parameter]
    public int Id { get; set; }
    private string letrero = "Nueva";
    private Carro elcarro = new();
    private List<Ciudad> lasciudades = new();
    private List<Condicion> lascondiciones = new();

    protected override async Task OnParametersSetAsync()
    {
        lasciudades = await _http.GetFromJsonAsync<List<Ciudad>>("api/ciudades");
        lascondiciones = await _http.GetFromJsonAsync<List<Condicion>>("api/condiciones");


        if (Id == 0)
        {
            letrero = "Nueva";
            elcarro = new();
        }
        else
        {
            letrero = "Modificar";
            elcarro = await _http.GetFromJsonAsync<Carro>($"api/carros/{Id}");
        }
    }

    private async void Guardar()
    {
        if (Id == 0)
        {
            await _http.PostAsJsonAsync<Carro>("api/carros", elcarro);
        }
        else
        {
            await _http.PutAsJsonAsync<Carro>($"api/carros/{Id}", elcarro);
        }
        _navegadorcarros.NavigateTo("/carros");
    }

    private void Cancelar()
    {
        _navegadorcarros.NavigateTo("/carros");
    }
}